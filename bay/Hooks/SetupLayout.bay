/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.Hooks;

use Runtime.lib;
use Runtime.Web.RedirectResponse;
use Runtime.Web.RenderContainer;
use Runtime.Web.RouteInfo;
use Runtime.Web.Hooks.AppHook as BaseAppHook;


class SetupLayout extends BaseAppHook
{
	string model = "";
	Dict<Dict> names = null;
	Collection components = [];
	
	
	/**
	 * Setup
	 */
	void setup(Dict params)
	{
		parent(params);
		
		if (params == null) return;
		if (params.has("components")) this.components = params.get("components");
		if (params.has("model")) this.model = params.get("model");
		if (params.has("names")) this.names = params.get("names");
	}
	
	
	/**
	 * Register hooks
	 */
	void register_hooks()
	{
		this.register(static::COMPONENTS, "registerComponents");
		this.register(static::LAYOUT_COMPONENT_NAME);
		this.register(static::LAYOUT_MODEL_NAME);
	}
	
	
	/**
	 * Components
	 */
	void registerComponents(Map params)
	{
		params["components"].appendItems(this.components);
	}
	
	
	/**
	 * Layout model name
	 */
	void layout_model_name(Map params)
	{
		/* Setup default model */
		if (this.model)
		{
			params.set("class_name", this.model);
		}
		
		/* Setup custom model */
		string layout_name = params.get("layout_name");
		if (
			this.names and
			this.names.has(layout_name) and
			this.names.get(layout_name).has("model")
		)
		{
			params.set("class_name", this.names.get(layout_name).get("model"));
		}
	}
	
	
	/**
	 * Layout component name
	 */
	void layout_component_name(Map params)
	{
		string layout_name = params.get("layout_name");
		if (
			this.names and
			this.names.has(layout_name) and
			this.names.get(layout_name).has("component")
		)
		{
			params.set("class_name", this.names.get(layout_name).get("component"));
		}
	}
}