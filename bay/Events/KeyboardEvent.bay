/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2021 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.Events;

use Runtime.CoreEvent;
use Runtime.Interfaces.CloneableInterface;
use Runtime.Interfaces.SerializeInterface;
use Runtime.Web.Events.WebEvent;


struct KeyboardEvent extends WebEvent
{
	
	public bool altKey = false;
	public int charCode = 0;
	public string code = "";
	public bool ctrlKey = false;
	public string key = false;
	public int keyCode = 0;
	public string locale = "";
	public int location = 0;
	public bool repeat = false;
	public bool shiftKey = false;
	public int which = 0;
	public string value = "";
	
	
	static void assignEventObject(var obj, var e)
	{
		parent(obj, e);
		
		#switch
		#case ifcode ES6 then
		
		obj.setValue(ctx, "altKey", e.altKey);
		obj.setValue(ctx, "charCode", e.charCode);
		obj.setValue(ctx, "code", e.code);
		obj.setValue(ctx, "ctrlKey", e.ctrlKey);
		obj.setValue(ctx, "key", e.key);
		obj.setValue(ctx, "keyCode", e.keyCode);
		obj.setValue(ctx, "locale", e.locale);
		obj.setValue(ctx, "location", e.location);
		obj.setValue(ctx, "repeat", e.repeat);
		obj.setValue(ctx, "shiftKey", e.shiftKey);
		obj.setValue(ctx, "which", e.which);
		obj.setValue(ctx, "value", e.currentTarget.value);
		
		#endswitch
	}
	
	
}

