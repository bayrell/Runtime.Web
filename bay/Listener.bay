/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2021 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web;

use Runtime.BaseStruct;
use Runtime.Web.ListenerCallback;
use Runtime.Web.VirtualDom;


struct Listener extends BaseStruct
{
	string from = "";
	string dest = "";
	string event_class_name = "";
	Vector<Dict> callbacks = new Vector();
	
	
	/**
	 * Add event
	 */
	void addCallback(string path_id, string method_name, var event_tag)
	{
		ListenerCallback item = this.callbacks.findItem
		(
			fn (Dict item) use (path_id, method_name) =>
				item.path_id == path_id and
				item.method_name == method_name
		);
		if (item == null)
		{
			this.callbacks.pushValue
			(
				new ListenerCallback
				{
					"path_id": path_id,
					"method_name": method_name,
					"event_tag": event_tag,
					"from": this.from,
					"dest": this.dest,
					"event_class_name": this.event_class_name,
				}
			);
		}
	}
	
}