/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web;

use Runtime.Web.ApiResult;
use Runtime.Web.BaseRoute;
use Runtime.Web.Bus;
use Runtime.Web.JsonResponse;
use Runtime.Web.RouteInfo;


class MainRoute extends BaseRoute
{
	/**
	 * Returns routes
	 */
	pure Collection<RouteInfo> getRoutes()
	{
		return
		[
			new RouteInfo
			{
				"uri": "/api/{service}/{api_name}/{method_name}/",
				"name": "runtime:web:api",
				"method": "actionIndex",
			},
		];
	}
	
	
	/**
	 * Action index
	 */
	async void actionIndex()
	{
		/* Decode data */
		var post_data = this.container.request.payload["data"];
		post_data = rtl::json_decode(post_data, false);
		
		if (post_data == null or not (post_data instanceof Dict))
		{
			return;
		}
		
		/* Call api */
		string service = this.container.route.matches["service"];
		string api_name = this.container.route.matches["api_name"];
		string method_name = this.container.route.matches["method_name"];
		
		ApiResult api = await Bus::callApi({
			"service": service,
			"class": api_name,
			"method": method_name,
			"data": post_data,
			"backend_storage": this.container.layout.backend_storage,
		});
		
		/* Create response */
		this.container.response = new JsonResponse(api.getContent());
	}
	
}