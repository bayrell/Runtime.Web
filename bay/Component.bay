/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web;

use Runtime.BaseObject;
use Runtime.BaseStruct;
use Runtime.Web.Events.BaseEvent;
use Runtime.Web.Controller;
use Runtime.Web.Element;
use Runtime.Web.Message;
use Runtime.Web.RenderDriver;


class Component extends BaseObject
{
	RenderDriver driver = null;
	Map old_params = null;
	Map params = null;
	var old_model = null;
	var new_model = null;
	Collection child_nodes = null;
	Collection model_path = null;
	Collection path_id = null;
	
	
	/**
	 * Returns true if need to repaint component
	 */
	bool isRepaint()
	{
		return this.new_model != this.old_model;
	}
	
	
	
	/**
	 * Repaint component
	 */
	void repaint(Element element)
	{
		if (this.isRepaint())
		{
			int begin = element.childs.count();
			fn f = static::render
			(
				element.driver.layout, this.new_model,
				this.params, element.content
			);
			if (f != null) f(element);
			int end = element.childs.count();
			this.child_nodes = element.childs.slice(begin, end - begin).toCollection();
		}
		else
		{
			element.childs.appendVector(this.child_nodes);
		}
	}
	
	
	
	/**
	 * Render function
	 */
	pure void render(BaseStruct layout, BaseStruct model, Dict params, html content) => null;
	
	
	
	/**
	 * Returns css name
	 */
	pure string getCssHash()
	{
		string class_name = static::getCurrentClassName();
		return RenderDriver::getCssHash(class_name);
	}
} 
