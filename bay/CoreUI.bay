<!--
 *  Index Page
-->

<class name="Runtime.Web.CoreUI">

<use name="Runtime.rtl" />
<use name="Runtime.Exceptions.RuntimeException" />
<use name="Runtime.Web.AppHook" />
<use name="Runtime.Web.Component" />


<template name="renderHead">
	%var Dict d = @.callHook(AppHook::RENDER_HEAD, { "classes": [] });
	%var Collection<string> classes = d["classes"];
	%for (int i=0; i<classes.count(); i++)
	{
		%var string class_name = classes[i];
		<{class_name} />
	}
</template>


<template name="renderBody">
	%var string class_name = layout::getLayoutClass(layout.layout_name);
	<div id="core_ui_root">
		<{class_name} @model=[] />
	</div>
	<textarea id="core_ui_layout" style="display: none">@raw{{ rs::base64_encode_url( rtl::json_encode( layout )) }}</textarea>
	<textarea id="frontend_env" style="display: none">@raw{{ rs::base64_encode_url( rtl::json_encode( render_params["container", "frontend_env"] )) }}</textarea>
</template>


<template name="renderApp">
	%var Dict d = @.callHook(AppHook::ENTRY_POINT, { "module_name": "", "entry_point": "" });
	<script>
		onReady(function(){
			let env = document.getElementById("frontend_env");
			env = Runtime.rtl.json_decode(Runtime.rs.base64_decode_url( env.value ));
			Runtime.rtl.runApp(
				@json{ d["module_name"] },
				@json{ d["entry_point"] },
				Runtime.Dict.from({"environments": env,"tz":@json{ @.tz }})
			);
		});
	</script>
</template>


<template name="renderFooter">
	%var Dict d = @.callHook(AppHook::RENDER_FOOTER, { "classes": [] });
	%var Collection<string> classes = d["classes"];
	%for (int i=0; i<classes.count(); i++)
	{
		%var string class_name = classes[i];
		<{class_name} />
	}
</template>


<template>
	<html>
		<head>
			<script>
			window.$onReady=[];
			function onReady(f){ window.$onReady.push(f) };
			</script>
			%render static::renderHead();
		</head>
		<body>
			%render static::renderBody();
			%render static::renderApp();
			%render static::renderFooter();
			<script>
			window.$onReady.forEach( function(f){ f(); } );
			</script>
		</body>
	</html>
</template>


</class>