/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web;

use Runtime.BaseStruct;
use Runtime.Exceptions.RuntimeException;
use Runtime.Web.AppHook;
use Runtime.Web.SeoModel;


struct Layout extends BaseStruct
{
	string title = "";
	string page_model_class_name = "";
	string layout_name = "default";
	string page_class_name = "";
	Dict<BaseStruct> pages = {};
	Dict<BaseStruct> models = {
		"seo": new SeoModel,
		"current_user": null,
	};
	
	/* Increment assets */
	string f_inc = "1";
	
	
	/**
	 * Returns page model
	 */
	BaseStruct getPageModel() => this.pages[ this.page_model_class_name ];
	
	
	/**
	 * Returns layout class name
	 */
	static string getLayoutPageClass(string layout_name)
	{
		Dict d = @.callHook(AppHook::LAYOUT_PAGE_CLASS_NAME, {
			"layout_name": layout_name,
			"layout_page_class_name": "",
		});
		
		string layout_page_class_name = d["layout_page_class_name"];
		if (layout_page_class_name == "")
		{
			throw new RuntimeException("Layout page class name is empty for '" ~ layout_name ~ "'");
		}
		
		return d["layout_page_class_name"];
	}
	
	
	/**
	 * Init layout
	 */
	async Layout init_layout() => this;
	
	
	/**
	 * Clear layout
	 */
	Layout clear_layout() => this;
	
	
	/**
	 * Returns clear layout
	 **/
	static Layout getClearLayout(Layout layout)
	{
		Dict d = @.callHook(AppHook::CLEAR_LAYOUT, {
			"layout": layout,
		});
		layout = d["layout"];
		return layout.clear_layout();
	}
}