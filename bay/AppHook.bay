/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web;

use Runtime.BaseHook;


class AppHook extends BaseHook
{
	
	static const string LAYOUT_CLASS_NAME = "runtime.web.app::layout_class_name";
	static const string CSS_CLASS_NAMES = "runtime.web.app::css_class_names";
	static const string CSS_SAVE = "runtime.web.app::css_save";
	static const string CORE_UI = "runtime.web.app::core_ui";
	static const string ROUTES_INIT = "runtime.web.app::routes_init";
	static const string CREATE_LAYOUT = "runtime.web.app::create_layout";
	static const string FIND_ROUTE = "runtime.web.app::find_route";
	static const string FOUND_ROUTE = "runtime.web.app::found_route";
	static const string MATCH_ROUTE = "runtime.web.app::match_route";
	static const string MIDDLEWARE = "runtime.web.app::middleware";
	static const string RESPONSE = "runtime.web.app::response";
	static const string RENDER_HEAD = "runtime.web.app::render_head";
	static const string RENDER_FOOTER = "runtime.web.app::render_footer";
	static const string ENTRY_POINT = "runtime.web.app::entry_point";
	static const string MAIN = "runtime.web.app::main";
	
	
	/**
	 * Returns method name by hook name
	 */
	string getMethodName(string hook_name)
	{
		if (hook_name == static::LAYOUT_CLASS_NAME) return "layout_class_name";
		if (hook_name == static::CSS_CLASS_NAMES) return "css_class_names";
		if (hook_name == static::CSS_SAVE) return "css_save";
		if (hook_name == static::CORE_UI) return "core_ui";
		if (hook_name == static::ROUTES_INIT) return "routes_init";
		if (hook_name == static::CREATE_LAYOUT) return "create_layout";
		if (hook_name == static::FIND_ROUTE) return "find_route";
		if (hook_name == static::FOUND_ROUTE) return "found_route";
		if (hook_name == static::MATCH_ROUTE) return "match_route";
		if (hook_name == static::MIDDLEWARE) return "middleware";
		if (hook_name == static::RESPONSE) return "response";
		if (hook_name == static::RENDER_HEAD) return "render_head";
		if (hook_name == static::RENDER_FOOTER) return "render_footer";
		if (hook_name == static::ENTRY_POINT) return "entry_point";
		if (hook_name == static::MAIN) return "main";
		return "";
	}
	
	
	/**
	 * Returns layout class name
	 */
	Dict layout_class_name(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Get css class names
	 */
	Dict css_class_names(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Get css save
	 */
	async Dict css_save(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Routes init
	 */
	async Dict routes_init(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Create layout
	 */
	async Dict create_layout(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Find route
	 */
	async Dict find_route(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Found route
	 */
	async Dict found_route(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Match route
	 */
	async Dict match_route(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Middleware
	 */
	async Dict middleware(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Response
	 */
	async Dict response(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Returns render head classes
	 */
	Dict render_head(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Returns frontend entry point
	 */
	Dict entry_point(Dict d)
	{
		return d;
	}
	
	
	/**
	 * Main function
	 */
	async Dict main(Dict d)
	{
		return d;
	}
	
}